@page "/counter"

@using BlazorAppMSAuth.Client.Services
@inject IHttpClientFactory HttpClientFactory
@inject HostingEnvironmentService HostingEnvironmentService
@* @rendermode InteractiveAuto *@
@rendermode InteractiveWebAssembly

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>
<h3>@Environ</h3>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<AuthorizeView Roles="Administrator">
    <ul>
@{foreach (var item in pings)
{
    <li>@item</li>
}}
</ul>
</AuthorizeView>


@code {
    private int currentCount = 0;
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private string Username = "";
    private string Environ = "";
    private List<string> pings = new List<string>();

        protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;
            Username = state?.User?.Identity?.Name ?? string.Empty;
            pings = new List<string>();

            await SayHello();
        }
    await base.OnInitializedAsync();
  }


    private void IncrementCount()
    {
        currentCount++;
    }
    
        private async Task SayHello()
    {        
        var client = HttpClientFactory.CreateClient("API");
        Environ = HostingEnvironmentService.EnvironmentName;



        try
        {
            pings = await client.GetFromJsonAsync<List<string>>("api/Ping") ?? new List<string>();
        }
        catch (Exception)
        {
            Environ = $"Permission Erro {HostingEnvironmentService.EnvironmentName}";
        }
        

    }

}
